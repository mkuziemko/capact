name: Main branch

on:
  push:
    paths:
      - "**.go"
      - "**.py"
      - "go.mod"
      - "go.sum"
      - "**.graphql"
      - ".github/workflows/**"
      - "**.sh"
      - "Makefile"
      - "deploy/**"
      - "hub-js/**"
      - "Dockerfile"
      - "!**.md"
      - "**.yaml.tmpl"
    branches:
      - "main"
      - "release-*"

jobs:
  entry-tests:
    name: Lint and test code
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup environment
        run: |
          . ./hack/ci/setup-env.sh
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{env.GO_VERSION}}

  prepare-matrix:
    name: Prepare components build matrix
    runs-on: ubuntu-latest
    outputs:
      matrix-app: ${{ steps.set-matrix-app.outputs.matrix }}
      matrix-test: ${{ steps.set-matrix-test.outputs.matrix }}
      matrix-infra: ${{ steps.set-matrix-infra.outputs.matrix }}
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2 # To be able to compare with the previous commit and detect changed files
      - name: setup env
        run: . ./hack/ci/setup-env.sh
      - id: set-matrix-app
        run: echo "::set-output ${APPS}"
      - id: set-matrix-test
        run: echo "::set-output ${TESTS}"
      - id: set-matrix-infra
        run: echo "::set-output ${INFRAS}"

  build-app:
    name: Build ${{ matrix.APP }}
    runs-on: ubuntu-latest
    needs: prepare-matrix
    strategy:
      matrix: ${{fromJson(needs.prepare-matrix.outputs.matrix-app)}}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup environment
        run: |
          . ./hack/ci/setup-env.sh
      - run: make build-app-image-${{ matrix.APP }}
      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - run: make push-app-image-${{ matrix.APP }}

  build-tests:
    name: Build ${{ matrix.TEST }}
    runs-on: ubuntu-latest
    needs: prepare-matrix
    strategy:
      matrix: ${{fromJson(needs.prepare-matrix.outputs.matrix-test)}}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup environment
        run: |
          . ./hack/ci/setup-env.sh
      - run: make build-test-image-${{ matrix.TEST }}
      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - run: make push-test-image-${{ matrix.TEST }}

  build-infra:
    name: Build ${{ matrix.INFRA }}
    runs-on: ubuntu-latest
    needs: prepare-matrix
    if: needs.prepare-matrix.outputs.matrix-infra != ''
    strategy:
      matrix: ${{fromJson(needs.prepare-matrix.outputs.matrix-infra)}}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup environment
        run: |
          . ./hack/ci/setup-env.sh
      - run: make build-infra-image-${{ matrix.INFRA }}
      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - run: make push-infra-image-${{ matrix.INFRA }}

  localhub-tests:
    name: Local Hub tests
    runs-on: ubuntu-latest
    needs: [ entry-tests, build-app, build-tests ]
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup environment
        run: |
          . ./hack/ci/setup-env.sh
      - name: Run local Hub tests
        env:
          BUILD_IMAGES: "false"
        run: |
          make test-localhub
